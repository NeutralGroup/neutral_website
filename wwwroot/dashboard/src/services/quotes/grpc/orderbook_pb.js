/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.neutralservice.L2Orderbook', null, global);
goog.exportSymbol('proto.neutralservice.LiquidityAtPrice', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neutralservice.L2Orderbook = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.neutralservice.L2Orderbook.repeatedFields_, null);
};
goog.inherits(proto.neutralservice.L2Orderbook, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neutralservice.L2Orderbook.displayName = 'proto.neutralservice.L2Orderbook';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.neutralservice.LiquidityAtPrice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.neutralservice.LiquidityAtPrice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.neutralservice.LiquidityAtPrice.displayName = 'proto.neutralservice.LiquidityAtPrice';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.neutralservice.L2Orderbook.repeatedFields_ = [8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neutralservice.L2Orderbook.prototype.toObject = function(opt_includeInstance) {
  return proto.neutralservice.L2Orderbook.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neutralservice.L2Orderbook} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neutralservice.L2Orderbook.toObject = function(includeInstance, msg) {
  var obj = {
    exchangename: jspb.Message.getFieldWithDefault(msg, 1, ""),
    symbol: jspb.Message.getFieldWithDefault(msg, 2, ""),
    base: jspb.Message.getFieldWithDefault(msg, 3, ""),
    quote: jspb.Message.getFieldWithDefault(msg, 4, ""),
    receivedtimeutcnanosecond: jspb.Message.getFieldWithDefault(msg, 5, 0),
    exchangetimeutcnanosecond: jspb.Message.getFieldWithDefault(msg, 6, 0),
    pulledtimeutcnanosecond: jspb.Message.getFieldWithDefault(msg, 7, 0),
    bidsList: jspb.Message.toObjectList(msg.getBidsList(),
    proto.neutralservice.LiquidityAtPrice.toObject, includeInstance),
    asksList: jspb.Message.toObjectList(msg.getAsksList(),
    proto.neutralservice.LiquidityAtPrice.toObject, includeInstance),
    confidence: +jspb.Message.getFieldWithDefault(msg, 10, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neutralservice.L2Orderbook}
 */
proto.neutralservice.L2Orderbook.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neutralservice.L2Orderbook;
  return proto.neutralservice.L2Orderbook.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neutralservice.L2Orderbook} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neutralservice.L2Orderbook}
 */
proto.neutralservice.L2Orderbook.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchangename(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBase(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuote(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setReceivedtimeutcnanosecond(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExchangetimeutcnanosecond(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPulledtimeutcnanosecond(value);
      break;
    case 8:
      var value = new proto.neutralservice.LiquidityAtPrice;
      reader.readMessage(value,proto.neutralservice.LiquidityAtPrice.deserializeBinaryFromReader);
      msg.addBids(value);
      break;
    case 9:
      var value = new proto.neutralservice.LiquidityAtPrice;
      reader.readMessage(value,proto.neutralservice.LiquidityAtPrice.deserializeBinaryFromReader);
      msg.addAsks(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setConfidence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neutralservice.L2Orderbook.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neutralservice.L2Orderbook.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neutralservice.L2Orderbook} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neutralservice.L2Orderbook.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExchangename();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBase();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getQuote();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getReceivedtimeutcnanosecond();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getExchangetimeutcnanosecond();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getPulledtimeutcnanosecond();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getBidsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.neutralservice.LiquidityAtPrice.serializeBinaryToWriter
    );
  }
  f = message.getAsksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.neutralservice.LiquidityAtPrice.serializeBinaryToWriter
    );
  }
  f = message.getConfidence();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
};


/**
 * optional string exchangeName = 1;
 * @return {string}
 */
proto.neutralservice.L2Orderbook.prototype.getExchangename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.neutralservice.L2Orderbook.prototype.setExchangename = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string symbol = 2;
 * @return {string}
 */
proto.neutralservice.L2Orderbook.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.neutralservice.L2Orderbook.prototype.setSymbol = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string base = 3;
 * @return {string}
 */
proto.neutralservice.L2Orderbook.prototype.getBase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.neutralservice.L2Orderbook.prototype.setBase = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string quote = 4;
 * @return {string}
 */
proto.neutralservice.L2Orderbook.prototype.getQuote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.neutralservice.L2Orderbook.prototype.setQuote = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint64 receivedTimeUtcNanosecond = 5;
 * @return {number}
 */
proto.neutralservice.L2Orderbook.prototype.getReceivedtimeutcnanosecond = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.neutralservice.L2Orderbook.prototype.setReceivedtimeutcnanosecond = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 exchangeTimeUtcNanosecond = 6;
 * @return {number}
 */
proto.neutralservice.L2Orderbook.prototype.getExchangetimeutcnanosecond = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.neutralservice.L2Orderbook.prototype.setExchangetimeutcnanosecond = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 pulledTimeUtcNanosecond = 7;
 * @return {number}
 */
proto.neutralservice.L2Orderbook.prototype.getPulledtimeutcnanosecond = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.neutralservice.L2Orderbook.prototype.setPulledtimeutcnanosecond = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated LiquidityAtPrice bids = 8;
 * @return {!Array<!proto.neutralservice.LiquidityAtPrice>}
 */
proto.neutralservice.L2Orderbook.prototype.getBidsList = function() {
  return /** @type{!Array<!proto.neutralservice.LiquidityAtPrice>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.neutralservice.LiquidityAtPrice, 8));
};


/** @param {!Array<!proto.neutralservice.LiquidityAtPrice>} value */
proto.neutralservice.L2Orderbook.prototype.setBidsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.neutralservice.LiquidityAtPrice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.neutralservice.LiquidityAtPrice}
 */
proto.neutralservice.L2Orderbook.prototype.addBids = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.neutralservice.LiquidityAtPrice, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.neutralservice.L2Orderbook.prototype.clearBidsList = function() {
  this.setBidsList([]);
};


/**
 * repeated LiquidityAtPrice asks = 9;
 * @return {!Array<!proto.neutralservice.LiquidityAtPrice>}
 */
proto.neutralservice.L2Orderbook.prototype.getAsksList = function() {
  return /** @type{!Array<!proto.neutralservice.LiquidityAtPrice>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.neutralservice.LiquidityAtPrice, 9));
};


/** @param {!Array<!proto.neutralservice.LiquidityAtPrice>} value */
proto.neutralservice.L2Orderbook.prototype.setAsksList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.neutralservice.LiquidityAtPrice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.neutralservice.LiquidityAtPrice}
 */
proto.neutralservice.L2Orderbook.prototype.addAsks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.neutralservice.LiquidityAtPrice, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.neutralservice.L2Orderbook.prototype.clearAsksList = function() {
  this.setAsksList([]);
};


/**
 * optional double confidence = 10;
 * @return {number}
 */
proto.neutralservice.L2Orderbook.prototype.getConfidence = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 10, 0.0));
};


/** @param {number} value */
proto.neutralservice.L2Orderbook.prototype.setConfidence = function(value) {
  jspb.Message.setProto3FloatField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.neutralservice.LiquidityAtPrice.prototype.toObject = function(opt_includeInstance) {
  return proto.neutralservice.LiquidityAtPrice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.neutralservice.LiquidityAtPrice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neutralservice.LiquidityAtPrice.toObject = function(includeInstance, msg) {
  var obj = {
    price: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    size: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.neutralservice.LiquidityAtPrice}
 */
proto.neutralservice.LiquidityAtPrice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.neutralservice.LiquidityAtPrice;
  return proto.neutralservice.LiquidityAtPrice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.neutralservice.LiquidityAtPrice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.neutralservice.LiquidityAtPrice}
 */
proto.neutralservice.LiquidityAtPrice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.neutralservice.LiquidityAtPrice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.neutralservice.LiquidityAtPrice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.neutralservice.LiquidityAtPrice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.neutralservice.LiquidityAtPrice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getSize();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional double price = 1;
 * @return {number}
 */
proto.neutralservice.LiquidityAtPrice.prototype.getPrice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.neutralservice.LiquidityAtPrice.prototype.setPrice = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double size = 2;
 * @return {number}
 */
proto.neutralservice.LiquidityAtPrice.prototype.getSize = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.neutralservice.LiquidityAtPrice.prototype.setSize = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


goog.object.extend(exports, proto.neutralservice);
